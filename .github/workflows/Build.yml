name: NewBuild
on:
  schedule:
    - cron: '59 23 * * 0'
  workflow_dispatch:
jobs:

  # This job tries to run the prerequisites, just to see if this works
  TryInit:
    runs-on: ubuntu-latest
    steps:
      - name: Checking-out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.x
        
      - name: Show Info
        run: dotnet --info
      
      - name: Receive Versions
        run: perl ".github/workflows/UpdateVersions.pl" "."

  # this is the real job needed to build and publish
  BuildAndPublishApplications:
    needs: TryInit
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        csproj-file: 
          - 'Randomizer/Randomizer.csproj'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.x
      
      - run: |
          projectDir=$(dirname ${{ matrix.csproj-file }})
          projectName=$(basename $projectDir)
          echo "ProjectDir=$projectDir" >> $GITHUB_ENV
          echo "ProjectName=$projectName" >> $GITHUB_ENV
      - run: perl ".github/workflows/UpdateVersions.pl" "."
      - run: dotnet restore "${{ matrix.csproj-file }}"
      - run: dotnet build "${{ matrix.csproj-file }}" --no-restore --configuration Release

      - uses: actions/upload-artifact@v4
        with:
          name: ${{env.ProjectName}}
          path: ${{env.ProjectDir}}/bin/Release

  BuildAndPublishNuGet:
    needs: TryInit
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        csproj-file: 
          - 'RandomNumberGenerators/RandomNumberGenerators.csproj'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.x
      
      - run: |
          projectDir=$(dirname ${{ matrix.csproj-file }})
          projectName=$(basename $projectDir)
          echo "ProjectDir=$projectDir" >> $GITHUB_ENV
          echo "ProjectName=$projectName" >> $GITHUB_ENV
      - run: perl ".github/workflows/UpdateVersions.pl" "."
      - run: dotnet restore "${{ matrix.csproj-file }}"
      - run: dotnet build "${{ matrix.csproj-file }}" --no-restore --configuration Release

      - name: Pack NuGet package
        run: dotnet pack "${{ matrix.csproj-file }}" --configuration Release --output ./artifacts
      
      - name: Publish the package to nuget.org
        run: dotnet nuget push ./artifacts/*.nupkg -k $NUGET_AUTH_TOKEN -s https://api.nuget.org/v3/index.json --skip-duplicate
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.NUGET_TOKEN }}
